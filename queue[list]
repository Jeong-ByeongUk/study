#include <stdio.h>
#include <stdlib.h>

typedef struct NODE* node;
struct NODE {
	int data;
	node link;
};

typedef struct QUEUE {
	node front;
	node rear;
}que;

void pr(que q);
node create(int data);
que push(que q, int data);
que creq();

int main(void) {
	que q = creq();
	int data;
	int choose = -1;
	while (choose != 3) {
		printf("1. 입력 2. 삭제 3. 종료\n");
		scanf("%d", &choose);

		switch (choose)
		{
		case 1:
			printf("입력할 수 : ");
			scanf("%d", &data);
			q = push(q, data);
			pr(q);
			break;
		case 2:
			data = pop(q);
			if (data == -1) printf("큐가 비어있습니다\n");
			else {
				printf("삭제된 수 : %d\n", data);
				if (q.front == q.rear) {
					q.front = NULL;
					q.rear = NULL;
				}
				else q.front = q.front->link;
			}
			pr(q);
			break;
		default:
			break;
		}
	}
}

que creq() {
	que new;
	
	new.front = NULL;
	new.rear = NULL;

	return new;
}

que push(que q, int data) {
	node new = create(data);

	if (q.front == NULL) {
		q.front = new;
		q.rear = new;
	}
	else {
		q.rear->link = new;
		q.rear = new;
	}

	return q;
}

node create(int data) {
	node new;

	new = (node)malloc(sizeof(node));
	new->data = data;
	new->link = NULL;

	return new;
}

int pop(que q) {
	int data;
	if (q.front == NULL) data = -1;
	else data = q.front->data;

	return data;
}

void pr(que q) {
	node temp;

	for (temp = q.front;temp != NULL;temp = temp->link)printf("%d -> ", temp->data);
	printf("NULL\n");
}
